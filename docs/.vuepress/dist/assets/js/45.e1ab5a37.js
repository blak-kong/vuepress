(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{230:function(t,a,s){"use strict";s.r(a);var e=s(6),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("前面学习了 JavaScript 的内存与垃圾回收，为了知行合一，现在再来看看常见的内存问题：内存泄露。")]),t._v(" "),a("p",[t._v("JavaScript 中内存管理的主要概念是可达性。")]),t._v(" "),a("p",[t._v("通过此次阅读你可以学习到:")]),t._v(" "),a("ul",[a("li",[t._v("3种常见的内存泄露")]),t._v(" "),a("li",[t._v("内存泄露的识别方法")])]),t._v(" "),a("h2",{attrs:{id:"一、全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、全局变量"}},[t._v("#")]),t._v(" 一、全局变量")]),t._v(" "),a("h4",{attrs:{id:"未声明的变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未声明的变量"}},[t._v("#")]),t._v(" 未声明的变量")]),t._v(" "),a("p",[t._v("当我们在一个函数中给一个变量赋值但是却没有声明它时:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Actually, I\'m a global variable"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("此时变量"),a("code",[t._v("a")]),t._v("相当于是"),a("code",[t._v("window")]),t._v("对象下的一个变量:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Actually, I\'m a global variable"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("再次复习执行栈知识点：全局作用域最先入栈，在执行栈栈底，在应用关闭前，理论上不可能被垃圾回收。")]),t._v(" "),a("h4",{attrs:{id:"使用this创建的变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用this创建的变量"}},[t._v("#")]),t._v(" 使用"),a("code",[t._v("this")]),t._v("创建的变量")]),t._v(" "),a("p",[t._v("还有一种情况是这样的:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Actually, I\'m a global variable"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("我们知道, 这里"),a("code",[t._v("this")]),t._v("的指向是"),a("code",[t._v("window")]),t._v(", 因此此时创建的"),a("code",[t._v("a")]),t._v("变量也会被挂载到"),a("code",[t._v("window")]),t._v("对象下.")]),t._v(" "),a("p",[t._v("避免此情况的解决办法是"),a("code",[t._v("在 JavaScript 文件头部或者函数的顶部加上 'use strict'")]),t._v(", 开启严格模式, 使得"),a("code",[t._v("this")]),t._v("的指向为"),a("code",[t._v("undefined")]),t._v(", 这样就可以避免了.")]),t._v(" "),a("blockquote",[a("p",[t._v("当然如果你必须使用全局变量存储大量数据时，确保用完以后把它设置为 null 或者重新定义。")])]),t._v(" "),a("h2",{attrs:{id:"二、闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、闭包"}},[t._v("#")]),t._v(" 二、闭包")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("s")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("参考的教程中，认为有四种情况导致内存泄露，实际上就只有两种。一种是未声明，一种是闭包。")]),t._v(" "),a("p",[t._v("我们知道，内存泄露的根本原因，是堆内存无法释放内存。而堆内存无法释放的原因只有一个，引用问题。")]),t._v(" "),a("h2",{attrs:{id:"三、dom引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、dom引用"}},[t._v("#")]),t._v(" 三、DOM引用")]),t._v(" "),a("p",[t._v("对于浏览器来说，还需要考虑 DOM 元素的情况。")]),t._v(" "),a("p",[t._v("如果某个变量（以及对象类型变量上的属性、元素）保留了对于 DOM 元素的引用，包括引用本页的元素或同源的 iframe 内的元素等情况，当该元素在页面上被删除时，对于它的引用很可能还被保留在变量内，这样就会造成内存泄露。")]),t._v(" "),a("h2",{attrs:{id:"内存泄露的识别方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存泄露的识别方法"}},[t._v("#")]),t._v(" 内存泄露的识别方法")]),t._v(" "),a("p",[t._v("上面👆介绍了这么多种可能会造成内存泄露的情况, 那么有没有什么实际的办法让我们看到内存泄露的表现呢?")]),t._v(" "),a("p",[t._v("当然是有的. 现在常用的是以下2种方式:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Chrome")]),t._v("浏览器的控制台"),a("code",[t._v("Performance")]),t._v("或"),a("code",[t._v("Memory")])]),t._v(" "),a("li",[a("code",[t._v("Node")]),t._v("提供的"),a("code",[t._v("process.memoryUsage")]),t._v("方法")])]),t._v(" "),a("h3",{attrs:{id:"chrome浏览器的控制台performance或memory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chrome浏览器的控制台performance或memory"}},[t._v("#")]),t._v(" "),a("code",[t._v("Chrome")]),t._v("浏览器的控制台"),a("code",[t._v("Performance")]),t._v("或"),a("code",[t._v("Memory")])]),t._v(" "),a("p",[t._v("Chrome 浏览器查看内存占用，按照以下步骤操作。")]),t._v(" "),a("ol",[a("li",[t._v("在网页上右键, 点击“检查”打开控制台("),a("code",[t._v("Mac")]),t._v("快捷键"),a("code",[t._v("option+command+i")]),t._v(");")]),t._v(" "),a("li",[t._v("选择"),a("code",[t._v("Performance")]),t._v("面板(很多教材中用的是"),a("code",[t._v("Timeline")]),t._v("面板, 不知道是不是版本的原因);")]),t._v(" "),a("li",[t._v("勾选"),a("code",[t._v("Memory")]),t._v(", 然后点击左上角的小黑点"),a("code",[t._v("Record")]),t._v("开始录制;")]),t._v(" "),a("li",[t._v("点击弹窗中的"),a("code",[t._v("Stop")]),t._v("结束录制, 面板上就会显示这段时间的内存占用情况。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/1/5/16f741f542a25cb2?w=2250&h=1786&f=png&s=141471",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/1/5/16f74223bf9dc5e8?w=2252&h=1830&f=png&s=368043",alt:""}})]),t._v(" "),a("p",[t._v("如果内存的使用情况一直在做增量, 那么就是内存泄露了:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/1/5/16f741433fd0e0be?w=2262&h=1826&f=png&s=392053",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"node提供的process-memoryusage方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node提供的process-memoryusage方法"}},[t._v("#")]),t._v(" "),a("code",[t._v("Node")]),t._v("提供的"),a("code",[t._v("process.memoryUsage")]),t._v("方法")]),t._v(" "),a("p",[t._v("另一个就是"),a("code",[t._v("Node")]),t._v("提供的"),a("code",[t._v("process.memoryUsage")]),t._v("方法, 这一块我用的不是很多, 这里就贴上教材:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("memoryUsage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { rss: 27709440,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  heapTotal: 5685248,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  heapUsed: 3449392,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  external: 8772 }")]),t._v("\n")])])]),a("p",[t._v("process.memoryUsage返回一个对象，包含了 Node 进程的内存占用信息。该对象包含四个字段，单位是字节，含义如下:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('rss（resident set size）：所有内存占用，包括指令区和堆栈。\nheapTotal："堆"占用的内存，包括用到的和没用到的。\nheapUsed：用到的堆的部分。\nexternal： V8 引擎内部的 C++ 对象占用的内存。\n')])])]),a("p",[t._v("判断内存泄露, 是看"),a("code",[t._v("heapUsed")]),t._v("字段.")]),t._v(" "),a("p",[t._v("对于内存泄露的详细调试方法，可以查看阮一峰的教程。")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2017/04/memory-leak.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 内存泄漏教程 - 阮一峰的网络日志"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("总的来说, 常见的内存泄露包括:")]),t._v(" "),a("ul",[a("li",[t._v("意外的全局变量")]),t._v(" "),a("li",[t._v("脱离DOM的引用")]),t._v(" "),a("li",[t._v("闭包")])]),t._v(" "),a("p",[t._v("如何避免内存泄露:")]),t._v(" "),a("ul",[a("li",[t._v("注意程序逻辑，避免“死循环”")]),t._v(" "),a("li",[t._v("减少不必要的全局变量，或者生命周期较长的对象，及时对无用的数据进行垃圾回收")]),t._v(" "),a("li",[t._v("避免创建过多的对象")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/LinDaiDai/niubility-coding-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("霖呆呆的blog"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);