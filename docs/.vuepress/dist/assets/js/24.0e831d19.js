(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{202:function(a,t,s){"use strict";s.r(t);var e=s(6),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),s("p",[a._v("前面学习了 JavaScript 的内存与垃圾回收，为了知行合一，现在再来看看常见的内存问题：内存泄露。")]),a._v(" "),s("p",[a._v("JavaScript 中内存管理的主要概念是可达性。")]),a._v(" "),s("p",[a._v("通过此次阅读你可以学习到:")]),a._v(" "),s("ul",[s("li",[a._v("3种常见的内存泄露")]),a._v(" "),s("li",[a._v("内存泄露的识别方法")])]),a._v(" "),s("h2",{attrs:{id:"一、全局变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、全局变量"}},[a._v("#")]),a._v(" 一、全局变量")]),a._v(" "),s("h4",{attrs:{id:"未声明的变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#未声明的变量"}},[a._v("#")]),a._v(" 未声明的变量")]),a._v(" "),s("p",[a._v("当我们在一个函数中给一个变量赋值但是却没有声明它时:")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("fn")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Actually, I\'m a global variable"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("此时变量"),s("code",[a._v("a")]),a._v("相当于是"),s("code",[a._v("window")]),a._v("对象下的一个变量:")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("fn")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Actually, I\'m a global variable"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("再次复习执行栈知识点：全局作用域最先入栈，在执行栈栈底，在应用关闭前，理论上不可能被垃圾回收。")]),a._v(" "),s("h4",{attrs:{id:"使用this创建的变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用this创建的变量"}},[a._v("#")]),a._v(" 使用"),s("code",[a._v("this")]),a._v("创建的变量")]),a._v(" "),s("p",[a._v("还有一种情况是这样的:")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("fn")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Actually, I\'m a global variable"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("我们知道, 这里"),s("code",[a._v("this")]),a._v("的指向是"),s("code",[a._v("window")]),a._v(", 因此此时创建的"),s("code",[a._v("a")]),a._v("变量也会被挂载到"),s("code",[a._v("window")]),a._v("对象下.")]),a._v(" "),s("p",[a._v("避免此情况的解决办法是"),s("code",[a._v("在 JavaScript 文件头部或者函数的顶部加上 'use strict'")]),a._v(", 开启严格模式, 使得"),s("code",[a._v("this")]),a._v("的指向为"),s("code",[a._v("undefined")]),a._v(", 这样就可以避免了.")]),a._v(" "),s("blockquote",[s("p",[a._v("当然如果你必须使用全局变量存储大量数据时，确保用完以后把它设置为 null 或者重新定义。")])]),a._v(" "),s("h2",{attrs:{id:"二、闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、闭包"}},[a._v("#")]),a._v(" 二、闭包")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("s"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("b")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("参考的教程中，认为有四种情况导致内存泄露，实际上就只有两种。一种是未声明，一种是闭包。")]),a._v(" "),s("p",[a._v("我们知道，内存泄露的根本原因，是堆内存无法释放内存。而堆内存无法释放的原因只有一个，引用问题。")]),a._v(" "),s("h2",{attrs:{id:"三、dom引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、dom引用"}},[a._v("#")]),a._v(" 三、DOM引用")]),a._v(" "),s("p",[a._v("对于浏览器来说，还需要考虑 DOM 元素的情况。")]),a._v(" "),s("p",[a._v("如果某个变量（以及对象类型变量上的属性、元素）保留了对于 DOM 元素的引用，包括引用本页的元素或同源的 iframe 内的元素等情况，当该元素在页面上被删除时，对于它的引用很可能还被保留在变量内，这样就会造成内存泄露。")]),a._v(" "),s("h2",{attrs:{id:"内存泄露的识别方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存泄露的识别方法"}},[a._v("#")]),a._v(" 内存泄露的识别方法")]),a._v(" "),s("p",[a._v("上面👆介绍了这么多种可能会造成内存泄露的情况, 那么有没有什么实际的办法让我们看到内存泄露的表现呢?")]),a._v(" "),s("p",[a._v("当然是有的. 现在常用的是以下2种方式:")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("Chrome")]),a._v("浏览器的控制台"),s("code",[a._v("Performance")]),a._v("或"),s("code",[a._v("Memory")])]),a._v(" "),s("li",[s("code",[a._v("Node")]),a._v("提供的"),s("code",[a._v("process.memoryUsage")]),a._v("方法")])]),a._v(" "),s("h3",{attrs:{id:"chrome浏览器的控制台performance或memory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chrome浏览器的控制台performance或memory"}},[a._v("#")]),a._v(" "),s("code",[a._v("Chrome")]),a._v("浏览器的控制台"),s("code",[a._v("Performance")]),a._v("或"),s("code",[a._v("Memory")])]),a._v(" "),s("p",[a._v("Chrome 浏览器查看内存占用，按照以下步骤操作。")]),a._v(" "),s("ol",[s("li",[a._v("在网页上右键, 点击“检查”打开控制台("),s("code",[a._v("Mac")]),a._v("快捷键"),s("code",[a._v("option+command+i")]),a._v(");")]),a._v(" "),s("li",[a._v("选择"),s("code",[a._v("Performance")]),a._v("面板(很多教材中用的是"),s("code",[a._v("Timeline")]),a._v("面板, 不知道是不是版本的原因);")]),a._v(" "),s("li",[a._v("勾选"),s("code",[a._v("Memory")]),a._v(", 然后点击左上角的小黑点"),s("code",[a._v("Record")]),a._v("开始录制;")]),a._v(" "),s("li",[a._v("点击弹窗中的"),s("code",[a._v("Stop")]),a._v("结束录制, 面板上就会显示这段时间的内存占用情况。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/1/5/16f741f542a25cb2?w=2250&h=1786&f=png&s=141471",alt:""}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/1/5/16f74223bf9dc5e8?w=2252&h=1830&f=png&s=368043",alt:""}})]),a._v(" "),s("p",[a._v("如果内存的使用情况一直在做增量, 那么就是内存泄露了:")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/1/5/16f741433fd0e0be?w=2262&h=1826&f=png&s=392053",alt:""}})]),a._v(" "),s("h3",{attrs:{id:"node提供的process-memoryusage方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node提供的process-memoryusage方法"}},[a._v("#")]),a._v(" "),s("code",[a._v("Node")]),a._v("提供的"),s("code",[a._v("process.memoryUsage")]),a._v("方法")]),a._v(" "),s("p",[a._v("另一个就是"),s("code",[a._v("Node")]),a._v("提供的"),s("code",[a._v("process.memoryUsage")]),a._v("方法, 这一块我用的不是很多, 这里就贴上教材:")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("memoryUsage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// { rss: 27709440,")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//  heapTotal: 5685248,")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//  heapUsed: 3449392,")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//  external: 8772 }")]),a._v("\n")])])]),s("p",[a._v("process.memoryUsage返回一个对象，包含了 Node 进程的内存占用信息。该对象包含四个字段，单位是字节，含义如下:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('rss（resident set size）：所有内存占用，包括指令区和堆栈。\nheapTotal："堆"占用的内存，包括用到的和没用到的。\nheapUsed：用到的堆的部分。\nexternal： V8 引擎内部的 C++ 对象占用的内存。\n')])])]),s("p",[a._v("判断内存泄露, 是看"),s("code",[a._v("heapUsed")]),a._v("字段.")]),a._v(" "),s("p",[a._v("对于内存泄露的详细调试方法，可以查看阮一峰的教程。")]),a._v(" "),s("p",[s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2017/04/memory-leak.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("JavaScript 内存泄漏教程 - 阮一峰的网络日志"),s("OutboundLink")],1)]),a._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("p",[a._v("总的来说, 常见的内存泄露包括:")]),a._v(" "),s("ul",[s("li",[a._v("意外的全局变量")]),a._v(" "),s("li",[a._v("脱离DOM的引用")]),a._v(" "),s("li",[a._v("闭包")])]),a._v(" "),s("p",[a._v("如何避免内存泄露:")]),a._v(" "),s("ul",[s("li",[a._v("注意程序逻辑，避免“死循环”")]),a._v(" "),s("li",[a._v("减少不必要的全局变量，或者生命周期较长的对象，及时对无用的数据进行垃圾回收")]),a._v(" "),s("li",[a._v("避免创建过多的对象")])]),a._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/LinDaiDai/niubility-coding-js",target:"_blank",rel:"noopener noreferrer"}},[a._v("霖呆呆的blog"),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);