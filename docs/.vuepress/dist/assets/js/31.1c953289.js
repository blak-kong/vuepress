(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{218:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("font",{attrs:{size:"4"}},[t._v("\n>这里结合ES5.1的变量声明方式var和function理解\n"),s("h2",{attrs:{id:"变量提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量提升"}},[t._v("#")]),t._v(" 变量提升")]),t._v(" "),s("p",[t._v("在 JavaScript 中，创建一个变量，会分为两个步骤。")]),t._v(" "),s("p",[t._v("第一步声明，第二步定义。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("var")]),t._v(" 的变量提升会初始化，并绑定到"),s("code",[t._v("this")]),t._v("：\n"),s("ul",[s("li",[t._v("var 在预解释的时候，会首先把变量声明，但是并不会定义")]),t._v(" "),s("li",[t._v("function 在预解释的时候，会首先把函数声明同时加定义")]),t._v(" "),s("li",[t._v("在全局作用域下，使用 var 和 function 声明的变量会给 window 增加属性")])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("console.log(test) // 不会报错\n\nvar test; // 声明\ntest = 1; // 定义（赋值）\n")])])]),s("ul",[s("li",[s("p",[s("code",[t._v("let/const")]),t._v(" 的变量提升不会初始化（会造成暂时性死区），并绑定作用域的上下文：")]),t._v(" "),s("ul",[s("li",[t._v("在一个作用域的上下文中，同样的变量名，只能声明一次，再次声明不被允许；")]),t._v(" "),s("li",[t._v("在不同作用域的上下文中，可以再次声明，进行覆盖；")]),t._v(" "),s("li",[t._v("与当前作用域的上下文绑定，不会给 window 增加属性。")])])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 外层作用域已经定义，却报引用错误 ReferenceError（划注意）")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught ReferenceError: x is not defined")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当此行不存在，则不会报错。（请使用node测试，浏览器有缓存）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("let")]),t._v("和"),s("code",[t._v("const")]),t._v("的区别\n"),s("ul",[s("li",[s("code",[t._v("let")]),t._v(" 声明的变量可以再次赋值。")]),t._v(" "),s("li",[s("code",[t._v("const")]),t._v(" 声明的变量会绑定内存空间，不允许再次赋值（变更指向的内存地址）。")])])])]),t._v(" "),s("h2",{attrs:{id:"javascript-中的作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-中的作用域"}},[t._v("#")]),t._v(" JavaScript 中的作用域")]),t._v(" "),s("p",[t._v("JavaScript 中没有块级作用域，只有函数作用域和全局作用域。")]),t._v(" "),s("p",[t._v("let 和 const 的特殊，主要在于，和作用域的上下文绑定。")]),t._v(" "),s("h3",{attrs:{id:"for-循环中的作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-循环中的作用域"}},[t._v("#")]),t._v(" for 循环中的作用域：")]),t._v(" "),s("p",[t._v("for 循环有一个特别之处，设置变量的那部分是一个父作用域，而循环体内部是一个单独的子作用域。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里和for()中是不同作用域，所以可以 `let i`")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//abc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//abc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//abc")]),t._v("\n")])])])])],1)}),[],!1,null,null,null);s.default=e.exports}}]);