(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{215:function(t,a,s){"use strict";s.r(a);var n=s(6),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"内置类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置类型"}},[t._v("#")]),t._v(" 内置类型")]),t._v(" "),s("p",[t._v("JS 中的数据类型，分为八种内置类型，而这八种内置类型又会分为两大类型：基本类型和引用类型(Object)。")]),t._v(" "),s("blockquote",[s("p",[t._v("javascript 最初只有五种数据类型，ES3~ES5 只有六种数据类型，ES6 有七种，到 ES11 有八种")])]),t._v(" "),s("p",[s("strong",[t._v("7 种基本类型：")]),t._v(" "),s("code",[t._v("null")]),t._v("，"),s("code",[t._v("undefined")]),t._v("，"),s("code",[t._v("boolean")]),t._v("，"),s("code",[t._v("number")]),t._v("，"),s("code",[t._v("string")]),t._v("，"),s("code",[t._v("symbol")]),t._v("，"),s("code",[t._v("bigint（ES11）")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("引用类型 Object：")]),t._v(" 包括 Array 和 Object")]),t._v(" "),s("h2",{attrs:{id:"类型判断之-typeof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型判断之-typeof"}},[t._v("#")]),t._v(" 类型判断之 typeof")]),t._v(" "),s("blockquote",[s("p",[t._v("作用：返回一个值的数据类型")])]),t._v(" "),s("p",[s("strong",[t._v("注意事项: 用 typeof 测试出来的类型都是小写的")])]),t._v(" "),s("p",[t._v("只能测试出 6 种类型:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("number")])]),t._v(" "),s("li",[s("p",[t._v("boolean")])]),t._v(" "),s("li",[s("p",[t._v("string")])]),t._v(" "),s("li",[s("p",[t._v("undefined")])]),t._v(" "),s("li",[s("p",[t._v("object")])]),t._v(" "),s("li",[s("p",[t._v("function")])])]),t._v(" "),s("h3",{attrs:{id:"_1-typeof-原始类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-typeof-原始类型"}},[t._v("#")]),t._v(" 1.typeof 原始类型")]),t._v(" "),s("p",[t._v("数值、字符串、布尔值分布返回 "),s("code",[t._v("number")]),t._v("、"),s("code",[t._v("string")]),t._v("、"),s("code",[t._v("boolean")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "number"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "string"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "boolean"')]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-typeof-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-typeof-函数"}},[t._v("#")]),t._v(" 2.typeof 函数")]),t._v(" "),s("p",[t._v("函数返回"),s("code",[t._v("function")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "function"')]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-typeof-undefined"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-typeof-undefined"}},[t._v("#")]),t._v(" 3. typeof undefined")]),t._v(" "),s("p",[s("code",[t._v("undefined")]),t._v(" 和没有声明的变量，用"),s("code",[t._v("typeof")]),t._v("返回的是"),s("code",[t._v("undefined")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n")])])]),s("h3",{attrs:{id:"_4-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-object"}},[t._v("#")]),t._v(" 4.object")]),t._v(" "),s("p",[t._v("除了以上三种情况，其他情况都返回"),s("code",[t._v("object")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("空数组"),s("code",[t._v("[]")]),t._v("的返回值是"),s("code",[t._v("object")]),t._v("，这表示，JavaScript 内部，数组本质上是一种特殊的对象。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("null")]),t._v("的返回值是"),s("code",[t._v("object")]),t._v("，这是由于历史原因造成的，1995 年 JavaScript 语言的第一版，所有值都设计成 32 位，其中最低的 3 位用来表述数据类型，object 对应的值是 000。当时，只设计了五种数据类型（对象、整数、浮点数、字符串和布尔值），完全没考虑 null，只把它当作 object 的一种特殊值，32 位全部为 0。这是 typeof null 返回 object 的根本原因。\n为了兼容以前的代码，后来就没法修改了。这并不是说 null 就属于对象，本质上 null 是一个类似于 undefined 的特殊值。")])])]),t._v(" "),s("blockquote",[s("p",[t._v("用法")])]),t._v(" "),s("p",[t._v("实际编程中, "),s("code",[t._v("typeof")]),t._v("通常用在判断语句")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("上面介绍了 js 中内置类型的基础判断方法和区别，下面再详细介绍下不同的内置类型")])]),t._v(" "),s("h2",{attrs:{id:"_1-number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-number"}},[t._v("#")]),t._v(" 1. number")]),t._v(" "),s("p",[t._v("JS 的数字类型是浮点类型的,没有整型,只能是实数,虚数不支持。")]),t._v(" "),s("p",[t._v("为什么把 number 单独拿出来讲？")]),t._v(" "),s("blockquote",[s("p",[t._v("经典面试题 0.1 + 0.2 = 0.30000000000000004")])]),t._v(" "),s("h3",{attrs:{id:"_1-整数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-整数"}},[t._v("#")]),t._v(" 1. 整数")]),t._v(" "),s("blockquote",[s("p",[t._v("二进制 用 0b 开头")])]),t._v(" "),s("p",[t._v("字节:8 个二进制位")]),t._v(" "),s("blockquote",[s("p",[t._v("八进制 用 0 或者 0o(推荐)开头")])]),t._v(" "),s("blockquote",[s("p",[t._v("十六进制 用 0x 开头")])]),t._v(" "),s("p",[t._v("转换为二进制:每一个 16 进制位,用 4 个二进制位来表示")]),t._v(" "),s("p",[t._v("123 = 0001 0010 0011")]),t._v(" "),s("h3",{attrs:{id:"_2-浮点数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-浮点数"}},[t._v("#")]),t._v(" 2. 浮点数")]),t._v(" "),s("p",[t._v("如果只是用来展示一个浮点数的结果，则可以借用 Number 对象的 toFixed 和 parseFloat 方法。")]),t._v(" "),s("p",[t._v("如果需要进行加减乘除，则需要进行处理，最好使用 js 数学库: 例如 "),s("code",[t._v("Math.js")])]),t._v(" "),s("h3",{attrs:{id:"_3-无穷大-infinity-正无穷大和负无穷大"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-无穷大-infinity-正无穷大和负无穷大"}},[t._v("#")]),t._v(" 3. 无穷大 Infinity (正无穷大和负无穷大)")]),t._v(" "),s("p",[t._v("Infinity 属性用于存放表示正无穷大的数值。")]),t._v(" "),s("p",[t._v("当一个数字超出 JavaScript 的 Infinity 限制，则只用 "),s("code",[t._v("Infinity")]),t._v(" 关键字表示。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.7976931348623157e10308")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Infinity")]),t._v("\n")])])]),s("h3",{attrs:{id:"_4-nan"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-nan"}},[t._v("#")]),t._v(" 4.NaN")]),t._v(" "),s("p",[s("strong",[t._v("NaN 的特殊:")])]),t._v(" "),s("p",[t._v("1.NaN 的 typeof 的类型是 number;")]),t._v(" "),s("p",[t._v("2.NaN 转成数字类型是 NaN ;")]),t._v(" "),s("p",[t._v("3.NaN 转成布尔类型是 false;")]),t._v(" "),s("p",[t._v("4.NaN 转成字符串是 NaN ;")]),t._v(" "),s("p",[t._v("5.NaN == NaN =>false ;")]),t._v(" "),s("p",[t._v("6.NaN ===NaN =>false;")]),t._v(" "),s("p",[t._v("7.0/0 = NaN")]),t._v(" "),s("h2",{attrs:{id:"_2-boolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-boolean"}},[t._v("#")]),t._v(" 2.Boolean")]),t._v(" "),s("p",[t._v("number 可以根据是否为零，强制类型转化为俩个值: true 和 false")]),t._v(" "),s("p",[t._v("只有 0 才是 false，其余不论正负都是 true")]),t._v(" "),s("h2",{attrs:{id:"_3-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-string"}},[t._v("#")]),t._v(" 3.String")]),t._v(" "),s("p",[t._v("字符串:用一对单引号"),s("code",[t._v("''")]),t._v("或者 一对双引号"),s("code",[t._v('""')]),t._v("括起来的字符序列.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LinDaiDai"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LinDaiDai"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"_4-undefined"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-undefined"}},[t._v("#")]),t._v(" 4.Undefined")]),t._v(" "),s("blockquote",[s("p",[t._v("当声明一个变量但是并没有赋值时,或者没有声明的变量,变量的类型是 Underfined 类型")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//转成数字为NaN")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("\n")])])]),s("p",[s("strong",[t._v("undefined 的特殊之处:")])]),t._v(" "),s("p",[t._v("1.undefined 的 typeof 的类型是 undefiend;")]),t._v(" "),s("p",[t._v("2.undefined 转成数字类型为 NaN;")]),t._v(" "),s("p",[t._v("3.undefined 转为布尔类型是 false;")]),t._v(" "),s("p",[t._v("4.undefined 转为字符串类型是 undefined ;")]),t._v(" "),s("p",[t._v("5.null == undefined => true;")]),t._v(" "),s("h2",{attrs:{id:"_5-null"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-null"}},[t._v("#")]),t._v(" 5.Null")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),s("p",[s("strong",[t._v("null 的特殊之处:")])]),t._v(" "),s("p",[t._v("1.null 的 typeof 的类型是 object;")]),t._v(" "),s("p",[t._v("2.null 转成数字类型为 0;")]),t._v(" "),s("p",[t._v("3.null 转为布尔类型是 false;")]),t._v(" "),s("p",[t._v("4.null 转为字符串类型是 null ;")]),t._v(" "),s("p",[t._v("5.null 和 任何非 null 都不相等;(但和 undefined 相等)")]),t._v(" "),s("p",[t._v("6.null == undefined =>true;")]),t._v(" "),s("h2",{attrs:{id:"_6-symbol"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-symbol"}},[t._v("#")]),t._v(" 6. Symbol")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Symbol")]),t._v("是 ES6 新增的一种数据类型")]),t._v(" "),s("p",[t._v("在 ES5 之前我们都没办法创建私有变量,只能想办法去封装.symbol 来创建私有成员")])]),t._v(" "),s("blockquote",[s("p",[t._v("用法 ⌨️")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//例1:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" firstName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建一个Symbol")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nperson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("firstName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"王先生"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("firstName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "王先生"')]),t._v("\n")])])]),s("p",[s("strong",[t._v("具体的用法请移步")])]),t._v(" "),s("h2",{attrs:{id:"_7-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-object"}},[t._v("#")]),t._v(" 7.Object")]),t._v(" "),s("p",[t._v("除了上述的六种基本数据类型，其他的数据都是"),s("code",[t._v("Object")]),t._v("类型")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LinDaiDai"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"bigint（大整数）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bigint（大整数）"}},[t._v("#")]),t._v(" bigint（大整数）")]),t._v(" "),s("p",[t._v("原本会自动显示成科学记数法的数值，用 bigint 可以正确显示。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("大整数字面量：给数字后缀一个 n 表示大整数，例如 9007199254740993n、0xFFn（二进制、八进制、十进制、十六进制字面量通通可以后缀个 n 变成 BigInt）")])]),t._v(" "),s("li",[s("p",[t._v("bigint 基础类型：typeof 1n === 'bigint'")])]),t._v(" "),s("li",[s("p",[t._v("类型构造函数：BigInt")])]),t._v(" "),s("li",[s("p",[t._v("重载数学运算符（加减乘除等）：支持大整数运算")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);